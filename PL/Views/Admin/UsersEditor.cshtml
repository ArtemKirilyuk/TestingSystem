@using PL.Infrastructure.Helpers
@model PL.ViewModels.UserEditorVIewModel
@{
    ViewBag.Title = "Admin room";
}
@section Search
        {@using (Ajax.BeginForm("UsersEditor", new { page = 1 }, new AjaxOptions { UpdateTargetId = "results" }))
        {
            <div class="col-sm-3 col-md-3" style="margin-top: 7px">
                <div class="input-group">
                    <input type="text" class="form-control" name="searchItem" placeholder="Search...">
                    <div class="input-group-btn">
                        <button class="btn btn-default" type="submit" value="Search">
                            <i class="glyphicon glyphicon-search"></i>
                        </button>
                    </div>
                </div>
            </div>
        }}
<div id="results">
    <h1>Admin room</h1>

    <table class="table" id="deletedUser">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Users.GetEnumerator().Current.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Users.GetEnumerator().Current.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Users.GetEnumerator().Current.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Users.GetEnumerator().Current.Age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Users.GetEnumerator().Current.Roles)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Users)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @foreach (var elem in item.Roles)
                    {
                        @Html.DisplayFor(modelItem => elem.Name)
                        <br/>
                    }
                </td>
                <td>
                    @Html.ActionLink("Edit", "EditUser", new {email = item.Email}) |
                    @Ajax.ActionLink("Delete", "DeleteUser", new {id = item.Id, name = Model.PageInfo.SearchItem, page = Model.PageInfo.PageNumber },
                        new AjaxOptions {Confirm = "Do you want delete '" + item.Name + "'?", UpdateTargetId = "results"}, new { @class = "text-danger" })
                </td>
            </tr>
        }

    </table>
    <div class="text-center">
        @if (Model.PageInfo.TotalPages <= 4)
        {
            @Html.FewPageLinks(Model.PageInfo, (x, y) => Url.Action("UsersEditor", new { page = x, searchItem = y }))
        }
        else
        {
            @Html.PageTopLink(Model.PageInfo, (x, y) => Url.Action("UsersEditor", new { page = x, searchItem = y }))
        
            @Html.PageLinks(Model.PageInfo, (x, y) => Url.Action("UsersEditor", new { page = x, searchItem = y }))
        
            @Html.PageEndLink(Model.PageInfo, (x, y) => Url.Action("UsersEditor", new { page = x, searchItem = y }))
        }

    </div>

</div>
@Scripts.Render("~/scripts/jquery-3.1.1.min.js")
@Scripts.Render("~/scripts/jquery.unobtrusive-ajax.min.js")